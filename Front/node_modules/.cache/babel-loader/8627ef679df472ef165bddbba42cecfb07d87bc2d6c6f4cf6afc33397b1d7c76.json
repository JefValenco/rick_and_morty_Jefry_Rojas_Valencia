{"ast":null,"code":"var _jsxFileName = \"/Users/jefry/Desktop/Henry/Clases/M2/Integration/integration_6B/rick_and_morty/Front/src/components/Cards.jsx\";\nimport Card from \"./Card\";\n/* import characters from \"../data.js\"; */\n\n/* \nAí me llegó el ejercicio y abajo simplemente lo organicé colocando el destructuring como las props recibidas.\nfunction Cards(props) {\n  const { characters } = props; */\n\n/* \n* Para las funcionales esto es muy importante: \ndecir esto:\nconst Cards = ({ characters }) => {\nes lo mismo que declarar esto:\nfunction Cards({ characters }) {\n */\n//10B) agregamos onclose\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cards(_ref) {\n  let {\n    characters,\n    onClose\n  } = _ref;\n  //Acá el characters del componente character ya esta siendo traido de forma destructurado\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: characters.map(_ref2 => {\n      let {\n        id,\n        name,\n        species,\n        gender,\n        image\n      } = _ref2;\n      return (\n        /*#__PURE__*/\n        /* Este Card es el iport de la línea uno. basicamente acá se esta haciendo lo mismo que hay\n        Es lo mismo que se está haciendo en App.jsx es la misma estructura que se hizo con rick. */\n        _jsxDEV(Card, {\n          // Esta es por el React para su uso interno. No podemos acceder a el\n          name: name,\n          species: species,\n          gender: gender,\n          image: image\n          // onClose no se paso como distracturing ya que la acabsmos de declara aquí abajo\n          ,\n          onClose: () => onClose(id)\n          // 10C)le paso el onClose que tengo por aprametro\n          // 11B) Le paso la proiedad id y voy a \"Card\" el componente\n          ,\n          id: id\n          // Con esto el padre le estría mandando este parametro al hijo. en este caso a Card\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      );\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["Card","Cards","characters","onClose","map","id","name","species","gender","image"],"sources":["/Users/jefry/Desktop/Henry/Clases/M2/Integration/integration_6B/rick_and_morty/Front/src/components/Cards.jsx"],"sourcesContent":["import Card from \"./Card\";\n/* import characters from \"../data.js\"; */\n\n/* \nAí me llegó el ejercicio y abajo simplemente lo organicé colocando el destructuring como las props recibidas.\nfunction Cards(props) {\n  const { characters } = props; */\n\n/* \n* Para las funcionales esto es muy importante: \ndecir esto:\nconst Cards = ({ characters }) => {\nes lo mismo que declarar esto:\nfunction Cards({ characters }) {\n */\n//10B) agregamos onclose\nfunction Cards({ characters, onClose }) {\n  //Acá el characters del componente character ya esta siendo traido de forma destructurado\n  return (\n    <div>\n      {/* Acá le puse character por que quise y sin s para diferenciar un poco*/}\n      {characters.map(({ id, name, species, gender, image }) => {\n        return (\n          /* Este Card es el iport de la línea uno. basicamente acá se esta haciendo lo mismo que hay\n         Es lo mismo que se está haciendo en App.jsx es la misma estructura que se hizo con rick. */\n          <Card\n            key={id} // Esta es por el React para su uso interno. No podemos acceder a el\n            name={name}\n            species={species}\n            gender={gender}\n            image={image}\n            // onClose no se paso como distracturing ya que la acabsmos de declara aquí abajo\n            onClose={() => onClose(id)}\n            // 10C)le paso el onClose que tengo por aprametro\n            // 11B) Le paso la proiedad id y voy a \"Card\" el componente\n            id={id}\n            // Con esto el padre le estría mandando este parametro al hijo. en este caso a Card\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Cards;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA,SAASC,KAAK,OAA0B;EAAA,IAAzB;IAAEC,UAAU;IAAEC;EAAQ,CAAC;EACpC;EACA,oBACE;IAAA,UAEGD,UAAU,CAACE,GAAG,CAAC,SAA0C;MAAA,IAAzC;QAAEC,EAAE;QAAEC,IAAI;QAAEC,OAAO;QAAEC,MAAM;QAAEC;MAAM,CAAC;MACnD;QAAA;QACE;AACV;QACU,QAAC,IAAI;UACM;UACT,IAAI,EAAEH,IAAK;UACX,OAAO,EAAEC,OAAQ;UACjB,MAAM,EAAEC,MAAO;UACf,KAAK,EAAEC;UACP;UAAA;UACA,OAAO,EAAE,MAAMN,OAAO,CAACE,EAAE;UACzB;UACA;UAAA;UACA,EAAE,EAAEA;UACJ;QAAA,GAVKA,EAAE;UAAA;UAAA;UAAA;QAAA;MAWP;IAEN,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,KA1BQJ,KAAK;AA4Bd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}