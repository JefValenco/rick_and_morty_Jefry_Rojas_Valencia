{"ast":null,"code":"var _jsxFileName = \"/Users/jefry/Desktop/Henry/Clases/M3/Integration/integration_7/rick_and_morty/Front/src/components/Detail.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n// El useEffect simula los ciclos de vida\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = () => {\n  _s();\n  var _character$origin;\n  // Este es el famoso detailId usado en el link detail en app\n  const {\n    detailId\n  } = useParams();\n  const [character, setCharacter] = useState({});\n  useEffect(() => {\n    fetch(`https://rickandmortyapi.com/api/character/${detailId}`)\n    // Fecth me está trayendo info sobre detailId que sería un id de un personaje\n    .then(response => response.json()).then(char => {\n      // esa info la transformo en date y la guardo en char\n      if (char.name) {\n        setCharacter(char);\n        // Luego seteo el estado con esa info de char\n      } else {\n        window.alert(\"No hay personajes con ese ID\");\n      }\n    }).catch(err => {\n      window.alert(\"No hay personajes con ese ID\");\n    });\n    return setCharacter({});\n  }, [detailId]); // Acá decía [id] y en realidad es {detailId} que sería lo que nos estamos trayendo de useParams\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: character === null || character === void 0 ? void 0 : character.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: character === null || character === void 0 ? void 0 : character.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: character === null || character === void 0 ? void 0 : character.species\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: character === null || character === void 0 ? void 0 : character.gender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: character === null || character === void 0 ? void 0 : (_character$origin = character.origin) === null || _character$origin === void 0 ? void 0 : _character$origin.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: character === null || character === void 0 ? void 0 : character.image,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Detail, \"ymmE2ERPY29p8TJTartmfuwZ8gw=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["useState","useEffect","useParams","Link","Detail","detailId","character","setCharacter","fetch","then","response","json","char","name","window","alert","catch","err","status","species","gender","origin","image"],"sources":["/Users/jefry/Desktop/Henry/Clases/M3/Integration/integration_7/rick_and_morty/Front/src/components/Detail.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n// El useEffect simula los ciclos de vida\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst Detail = () => {\n  // Este es el famoso detailId usado en el link detail en app\n  const { detailId } = useParams();\n\n  const [character, setCharacter] = useState({});\n\n  useEffect(() => {\n    fetch(`https://rickandmortyapi.com/api/character/${detailId}`)\n      // Fecth me está trayendo info sobre detailId que sería un id de un personaje\n      .then((response) => response.json())\n      .then((char) => {\n        // esa info la transformo en date y la guardo en char\n        if (char.name) {\n          setCharacter(char);\n          // Luego seteo el estado con esa info de char\n        } else {\n          window.alert(\"No hay personajes con ese ID\");\n        }\n      })\n      .catch((err) => {\n        window.alert(\"No hay personajes con ese ID\");\n      });\n    return setCharacter({});\n  }, [detailId]); // Acá decía [id] y en realidad es {detailId} que sería lo que nos estamos trayendo de useParams\n\n  return (\n    <div>\n      <Link to=\"/home\">\n        <button>Home</button>\n      </Link>\n      <h1>{character?.name}</h1>\n      {/* Acá ponemos la infor de mi estado guardada */}\n      {/* El ? pregunta sitengo info en mi estado */}\n      {/*       <h2>Detail</h2> */}\n      <p>{character?.status}</p>\n      <p>{character?.species}</p>\n      {/*  <p>{character?.type}</p> */}\n      <p>{character?.gender}</p>\n      <p>{character?.origin?.name}</p>\n      {/*   <p>{character?.location}</p> */}\n      <img src={character?.image} alt=\"\" />\n    </div>\n  );\n};\n\nexport default Detail;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;AACA,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAExC,MAAMC,MAAM,GAAG,MAAM;EAAA;EAAA;EACnB;EACA,MAAM;IAAEC;EAAS,CAAC,GAAGH,SAAS,EAAE;EAEhC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAE,6CAA4CH,QAAS,EAAC;IAC3D;IAAA,CACCI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACA,IAAIA,IAAI,CAACC,IAAI,EAAE;QACbN,YAAY,CAACK,IAAI,CAAC;QAClB;MACF,CAAC,MAAM;QACLE,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC9C;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdH,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;IAC9C,CAAC,CAAC;IACJ,OAAOR,YAAY,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,oBACE;IAAA,wBACE,QAAC,IAAI;MAAC,EAAE,EAAC,OAAO;MAAA,uBACd;QAAA,UAAQ;MAAI;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAChB,eACP;MAAA,UAAKC,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEO;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eAI1B;MAAA,UAAIP,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEY;IAAM;MAAA;MAAA;MAAA;IAAA,QAAK,eAC1B;MAAA,UAAIZ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEa;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eAE3B;MAAA,UAAIb,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEc;IAAM;MAAA;MAAA;MAAA;IAAA,QAAK,eAC1B;MAAA,UAAId,SAAS,aAATA,SAAS,4CAATA,SAAS,CAAEe,MAAM,sDAAjB,kBAAmBR;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,eAEhC;MAAK,GAAG,EAAEP,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEgB,KAAM;MAAC,GAAG,EAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACjC;AAEV,CAAC;AAAC,GA3CIlB,MAAM;EAAA,QAEWF,SAAS;AAAA;AAAA,KAF1BE,MAAM;AA6CZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}