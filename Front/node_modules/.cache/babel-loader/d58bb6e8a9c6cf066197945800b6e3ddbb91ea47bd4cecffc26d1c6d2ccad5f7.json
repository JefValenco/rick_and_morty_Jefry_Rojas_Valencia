{"ast":null,"code":"import { ADD_FAVORITTE } from \"./actionTypes\";\nimport { DELETE_FAVORITTE, FILTER, ORDER } from \"./actionTypes\";\nconst initialState = {\n  myFavorites: [],\n  allCharacters: [] // 3)Agregamos esto\n};\n\n/*\n * gender\n */\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FAVORITTE:\n      return {\n        ...state,\n        /* 4)\n        Antes estaba asi pero le agremgamos lo que nos pidio el read menubar\n        myFavorites: [\n        ...state.myFavorites,\n        action.payload,\n        ] Con esto le estoy concatenando lo persoanjes a mis favoritos, sin pisarlos */\n\n        myFavorites: [...state.allCharacters, action.payload],\n        allCharacters: [...state.allCharacters, action.payload]\n      };\n    case DELETE_FAVORITTE:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(character => character.id !== action.payload) //con vamos a quedar con todos los personakes menos con el que su \"id \" coincida con el que me ingresen\n      };\n\n    /*     case FILTER:\n      //5 y 06)\n      const allCharactersFiltered = state.allCharacters.filter(\n        (char) => char.gender === action.payload\n      );\n      return {\n        ...state,\n        myFavorites: allCharactersFiltered,\n      }; */\n\n    case FILTER:\n      const {\n        gender,\n        status\n      } = action.payload;\n      const allCharactersFiltered = state.allCharacters.filter(char => char.gender === gender && char.status === status);\n      return {\n        ...state,\n        myFavorites: allCharactersFiltered\n      };\n\n    /* \n    allCharacters\n    */\n    case ORDER:\n      return {\n        ...state,\n        myFavorites: action.payload === \"Ascendente\" // Voy a estar filtrando a:\n        ? state.allCharacters.sort((a, b) => a.id - b.id) : state.allCharacters.sort((a, b) => b.id - a.id)\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_FAVORITTE","DELETE_FAVORITTE","FILTER","ORDER","initialState","myFavorites","allCharacters","reducer","state","action","type","payload","filter","character","id","gender","status","allCharactersFiltered","char","sort","a","b"],"sources":["/Users/jefry/Desktop/Henry/Clases/M3/Integration/integration_8 _Promises/rick_and_morty/Front/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAVORITTE } from \"./actionTypes\";\nimport { DELETE_FAVORITTE, FILTER, ORDER } from \"./actionTypes\";\n\nconst initialState = {\n  myFavorites: [],\n  allCharacters: [], // 3)Agregamos esto\n};\n\n/*\n * gender\n */\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FAVORITTE:\n      return {\n        ...state,\n\n        /* 4)\nAntes estaba asi pero le agremgamos lo que nos pidio el read menubar\n\nmyFavorites: [\n  ...state.myFavorites,\n  action.payload,\n] Con esto le estoy concatenando lo persoanjes a mis favoritos, sin pisarlos */\n\n        myFavorites: [...state.allCharacters, action.payload],\n        allCharacters: [...state.allCharacters, action.payload],\n      };\n\n    case DELETE_FAVORITTE:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(\n          (character) => character.id !== action.payload\n        ), //con vamos a quedar con todos los personakes menos con el que su \"id \" coincida con el que me ingresen\n      };\n\n    /*     case FILTER:\n      //5 y 06)\n      const allCharactersFiltered = state.allCharacters.filter(\n        (char) => char.gender === action.payload\n      );\n      return {\n        ...state,\n        myFavorites: allCharactersFiltered,\n      }; */\n\n    case FILTER:\n      const { gender, status } = action.payload;\n      const allCharactersFiltered = state.allCharacters.filter(\n        (char) => char.gender === gender && char.status === status\n      );\n      return {\n        ...state,\n        myFavorites: allCharactersFiltered,\n      };\n\n    /* \nallCharacters\n*/\n    case ORDER:\n      return {\n        ...state,\n        myFavorites:\n          action.payload === \"Ascendente\" // Voy a estar filtrando a:\n            ? state.allCharacters.sort((a, b) => a.id - b.id)\n            : state.allCharacters.sort((a, b) => b.id - a.id),\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default reducer;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,eAAe;AAC7C,SAASC,gBAAgB,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AAE/D,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE,EAAE,CAAE;AACrB,CAAC;;AAED;AACA;AACA;AACA,MAAMC,OAAO,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAM;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,aAAa;MAChB,OAAO;QACL,GAAGQ,KAAK;QAER;AACR;AACA;AACA;AACA;AACA;;QAGQH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,aAAa,EAAEG,MAAM,CAACE,OAAO,CAAC;QACrDL,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAa,EAAEG,MAAM,CAACE,OAAO;MACxD,CAAC;IAEH,KAAKV,gBAAgB;MACnB,OAAO;QACL,GAAGO,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACO,MAAM,CAClCC,SAAS,IAAKA,SAAS,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAC/C,CAAE;MACL,CAAC;;IAEH;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI,KAAKT,MAAM;MACT,MAAM;QAAEa,MAAM;QAAEC;MAAO,CAAC,GAAGP,MAAM,CAACE,OAAO;MACzC,MAAMM,qBAAqB,GAAGT,KAAK,CAACF,aAAa,CAACM,MAAM,CACrDM,IAAI,IAAKA,IAAI,CAACH,MAAM,KAAKA,MAAM,IAAIG,IAAI,CAACF,MAAM,KAAKA,MAAM,CAC3D;MACD,OAAO;QACL,GAAGR,KAAK;QACRH,WAAW,EAAEY;MACf,CAAC;;IAEH;AACJ;AACA;IACI,KAAKd,KAAK;MACR,OAAO;QACL,GAAGK,KAAK;QACRH,WAAW,EACTI,MAAM,CAACE,OAAO,KAAK,YAAY,CAAC;QAAA,EAC5BH,KAAK,CAACF,aAAa,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACN,EAAE,GAAGO,CAAC,CAACP,EAAE,CAAC,GAC/CN,KAAK,CAACF,aAAa,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACP,EAAE,GAAGM,CAAC,CAACN,EAAE;MACtD,CAAC;IAEH;MACE,OAAO;QAAE,GAAGN;MAAM,CAAC;EAAC;AAE1B,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}