{"ast":null,"code":"var _jsxFileName = \"/Users/jefry/Desktop/Henry/Clases/M3/Integration/integration_8 _Promises/rick_and_morty/Front/src/components/SearchBar.jsx\",\n  _s = $RefreshSig$();\n// 8)\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar(_ref) {\n  _s();\n  let {\n    onSearch\n  } = _ref;\n  //8) Este es el estado inicial\n  const [character, setCharacter] = useState(\"\");\n  //8C) AGREGO EL handler que falta por haber introducido el onChange\n\n  const handleChange = event => {\n    setCharacter(event.target.value);\n    /* No mehago una copia por que no me importa lola busqueda pasada, si no lo que está escribiendo ahora mismo */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      value: character,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSearch(character),\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"8SLg3G1o1daq/wzsxqZfGjCF40M=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","SearchBar","onSearch","character","setCharacter","handleChange","event","target","value"],"sources":["/Users/jefry/Desktop/Henry/Clases/M3/Integration/integration_8 _Promises/rick_and_morty/Front/src/components/SearchBar.jsx"],"sourcesContent":["// 8)\nimport { useState } from \"react\";\n\nfunction SearchBar({ onSearch }) {\n  //8) Este es el estado inicial\n  const [character, setCharacter] = useState(\"\");\n  //8C) AGREGO EL handler que falta por haber introducido el onChange\n\n  const handleChange = (event) => {\n    setCharacter(event.target.value);\n    /* No mehago una copia por que no me importa lola busqueda pasada, si no lo que está escribiendo ahora mismo */\n  };\n\n  return (\n    <div>\n      {/* 8B) agrego el value y el listener onChange */}\n      {/* este value es lo que el usuario va escribiendo\n      el onChange siempre recibe el handle */}\n      <input type=\"search\" value={character} onChange={handleChange} />\n      {/* 8D) para poder pasarle parametro a {onSearch} necesito escribirla asi: {() => onSearch} */}\n      <button onClick={() => onSearch(character)}>Agregar</button>\n    </div>\n  );\n}\n\nexport default SearchBar;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,SAAS,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC7B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC9C;;EAEA,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC9BF,YAAY,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAChC;EACF,CAAC;;EAED,oBACE;IAAA,wBAIE;MAAO,IAAI,EAAC,QAAQ;MAAC,KAAK,EAAEL,SAAU;MAAC,QAAQ,EAAEE;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,eAEjE;MAAQ,OAAO,EAAE,MAAMH,QAAQ,CAACC,SAAS,CAAE;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACxD;AAEV;AAAC,GApBQF,SAAS;AAAA,KAATA,SAAS;AAsBlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}